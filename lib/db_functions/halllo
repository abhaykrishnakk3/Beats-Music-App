import 'package:flutter/material.dart';
import 'package:on_audio_query/on_audio_query.dart';


class Musics extends StatefulWidget {
  const Musics({Key? key}) : super(key: key);
  static dynamic songscount;
  static dynamic selectedindex;
  static dynamic songslist;


  @override
  State<Musics> createState() => _MusicsState();
}
class _MusicsState extends State<Musics> {
  @override
  void initState() {
    super.initState();
    PlayerFunctions.player.currentIndexStream.listen(
      (index) {
      if(index != null){
        setState(() {
        Musics.selectedindex=index;
        });
      }
      }
      );
  }
  @override
  Widget build(BuildContext context) {
    FavouritesData.showsongs();
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: <Widget>[
        ClipRRect(
          borderRadius: BorderRadius.circular(MediaQuery.of(context).size.width*0.03),
          child: ColoredBox(
            color: const Color.fromARGB(73, 255, 255, 255),
            child: Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                IconButton(onPressed: (){}, 
                icon: Icon(Icons.search_outlined,color: Colors.white,size: MediaQuery.of(context).size.width*0.08,)),
                Text(
              'Musics',
              style: TextStyle(
                  color: Colors.white,
                  fontSize: MediaQuery.of(context).size.aspectRatio * 60,
                  fontWeight: FontWeight.w900),
            ),
             IconButton(onPressed: (){}, icon: Icon(Icons.sort,color: Colors.white,size: MediaQuery.of(context).size.width*0.08,)),
              ],
            ),
          ),
        ),
        SizedBox(height: MediaQuery.of(context).size.height * 0.02,),
        Expanded(
          child: FutureBuilder<List<SongModel>>(
            future: OnAudioFunctons.audioQuery.querySongs(
                sortType: null,
                orderType: OrderType.ASC_OR_SMALLER,
                uriType: UriType.EXTERNAL,
                ignoreCase: true),
            builder: (context, item) {
              Musics.songslist=item.data;
              if (item.data == null) {
                return const Center(
                  child:  CircularProgressIndicator(
                    color: Color.fromARGB(73, 255, 255, 255),
                    strokeWidth: 10,
                  ),
                );
              }
              if (item.data!.isEmpty) {
                return   Center(child: Text('No musics found',style: TextStyle(
                  color: Colors.white,
                  fontSize: MediaQuery.of(context).size.aspectRatio * 40,
                  fontWeight: FontWeight.w900)));
              }
              Musics.songscount = item.data!.length - 1;
              if (Musics.selectedindex == null) {
                return ListView.builder(
                  itemCount: item.data!.length,
                  itemBuilder: (BuildContext context, int index) {
                    return InkWell(
                        child: MusicListBuilder(index: index, item: item),
                        onTap: () {
                          Musics.selectedindex = index;
                          setState(() {});
                          PlayerFunctions.play(item.data!,index);
                        });
                  },
                );
              } else {
                return Column(
                  children: [
                    Expanded(
                      child: ListView.builder(
                        itemCount: item.data!.length,
                        itemBuilder: (BuildContext context, int index) {
                          return InkWell(
                              child: MusicListBuilder(
                                  index: index, item: item),
                              onTap: () {
                                if (Musics.selectedindex ==index) {
                                  Navigator.of(context).push(MaterialPageRoute( builder: (context) =>PlayerScreen(item: item)));
                                } else {
                                  Musics.selectedindex = index;
                                  setState(() {});
                                  PlayerFunctions.play(item.data!,index);
                                }
                              });
                        },
                      ),
                    ),
                    InkWell(
                        onTap: () async {
                          await Navigator.of(context).push(MaterialPageRoute(builder: (context) => PlayerScreen(item: item)));
                          setState(() {});
                        },
                        child: MiniPLayerScreen(item: item))
                  ],
                );
              }
            },
          ),
        ),
      ],
    );
  }
}